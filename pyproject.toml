

# https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#writing-pyproject-toml


[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=67.0", "setuptools_scm[toml]>=7.1"]


[project]
name = "cgmlstorg_client"
dynamic = ["version"]
dependencies = [
    "numpy",
]
requires-python =">=3.9"

authors = [
  {name = "Peter van Heusden", email = "pvanheusden@uwc.ac.za"},
  # {name = "Another person"}, {email = "different.person@example.com"},
]
maintainers = [
  # {name = "Another person"}, {email = "different.person@example.com"},
]
description = "A client to list and download schemes from cgMLST.org"
readme = "README.md"
license = {file = "LICENSE"}
keywords = []
classifiers = [ 
  # Full List: https://pypi.org/classifiers/
  
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 4 - Beta",

  # Indicate who your project is intended for
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Build Tools",

  # Pick your license as you wish (see also "license" above)
  # "License :: OSI Approved :: MIT License",
  # "License :: OSI Approved :: Apache Software License",
]

[project.urls]
Homepage = "https://github.com/pvanheus/cgmlstorg_client/"
# Documentation = "https://readthedocs.org"
# Repository = "https://github.com/me/spam.git"
# Issues = "https://github.com/me/spam/issues"
# Changelog = "https://github.com/me/spam/blob/master/CHANGELOG.md"


[project.optional-dependencies]
dev = [
    "setuptools_scm",
    "pytest",
    "pytest-cov",
    "mypy",
    "sphinx",
    "pre-commit",
    "ruff",
]


[tool.setuptools]
packages = ["cgmlstorg_client"]


[tool.setuptools_scm]
fallback_version = "0.0.0-dev"
# write_to = "cgmlstorg_client/_version.py"


[tools.ruff]
# https://docs.astral.sh/ruff/configuration/
line-length = 88
indent-width = 4

[tool.ruff.lint]
ignore = []

[tool.ruff.lint.per-file-ignores]
# Don't complaine about unused imports in __init__.py
"__init__.py" = ["F401", "F403"]


# pytest configuration
# https://docs.pytest.org/en/7.2.x/reference/customize.html

[tool.pytest.ini_options]
testpaths = "cgmlstorg_client"



[tool.coverage.run]
branch = true
source = ["cgmlstorg_client"]
parallel = true

[tool.coverage.report]
omit = ['*_test.py']
exclude_lines = [
  '\#\s*pragma: no cover',
  '^\s*raise AssertionError\b',
  '^\s*raise NotImplementedError\b',
  '^\s*return NotImplemented\b',
  '^\s*raise$',
  '^assert False\b',
  '''^if __name__ == ['"]__main__['"]:$''',
]


# mypy typecheck configuration
# https://mypy.readthedocs.io/en/stable/config_file.html

# [tools.mypy]
files = "cgmlstorg_client"

# Suppresses error about unresolved imports (i.e. from numpy)
gnore_missing_imports = true

# Disallows functions without type annotations#
disallow_untyped_defs = true
